import persona.*
import infecciosa.*
import autoinmune.*

describe "Testsitos" {
	
	var malaria1
	var otitis
	var lupus
	var malaria2
	var logan
	var frank
	
	method initialize() {
		malaria1 = new EnfermedadInfecciosa(celulasAmenazadas = 500)	
		otitis = new EnfermedadInfecciosa(celulasAmenazadas = 100)
		malaria2 = new EnfermedadInfecciosa(celulasAmenazadas = 800)
		lupus = new EnfermedadAutoinmune(celulasAmenazadas = 10000, diasAfectando = 0)
		logan = new Persona(temperaturaActual = 36, celulasTotales = 3000000, enfermedades = #{malaria1, otitis, lupus})
		frank = new Persona(temperaturaActual = 36, celulasTotales = 3500000, enfermedades = #{})
	}
	
	
	test "Test 1 - Frank contrae malaria2" {
		frank.contraerEnfermedad(malaria2)
		assert.equals(#{malaria2}, frank.enfermedades())
	}

	test "Test 2 - La malaria de Logan se reproduce" {
		malaria1.reproducirse()
		assert.equals(1000, malaria1.cantidadCelulasAmenazadas())
	}
	
	test "Test 3.1 - Verificar la enfermedad que más células afecta de Logan" {
		var maximo
		maximo = logan.enfermedades().max({
			enfermedad => enfermedad.cantidadCelulasAmenazadas()
		})
		assert.equals(lupus, maximo)
	}

	test "Test 3.2 - Verificar si Logan está en coma" {
		var valor
		valor = logan.coma() == true
		assert.equals(false, valor)	
		}
		
	test "Test 3.3 - Verificar la cantidad de celulas de Logan afectadas por enfermedades agresivas" {
		var suma
		suma = logan.enfermedades().sum({
			enfermedad => enfermedad.cantidadCelulasAmenazadas()
		})
		assert.equals(10600, suma)	
	}
	
	test "Test 4 - Hacer que Logan pase 31 días y verificar las consultas anteriores" {
		var valor
		logan.cantidadDiasAfectada(0)
		31.times({ 
			_i => logan.vivirUnDia()
		})
		valor = logan.coma() == true
		assert.equals(true, valor)	
	}
}
